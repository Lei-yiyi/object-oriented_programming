# -*- coding: utf-8 -*-

"""
Created on 2020-05-16

Updated on 2020-05-16

@author: 小小磊

@requirements: Python 3.5

@decription: Python 属性（实例属性、类属性）

@ref:
"""

"""
-----------------------------------------------------------------------------------------
属性：
实例属性 —— 
类属性 —— 对象共有的特征
-----------------------------------------------------------------------------------------
实例属性：

    在类的外面

            赋值（创建）
                            类名.实例属性名 = 属性值（错误用法，执行报错）　
                对象.实例属性名 = 属性值（不推荐）　　　　
            调用
                            类名.实例属性名（错误用法，执行报错）　
                对象.实例属性名

    在类的里面

            赋值（创建）
                使用__init__方法来给实例属性赋值（写死）
                self.实例属性名 = 属性值　　
                            cls.实例属性名 = 属性值（错误用法，执行报错）　　
            调用
                self.实例属性名　　
                            cls.实例属性名（错误用法，执行报错）


# 实例属性, 在类外赋值（创建）, 使用 对象.实例属性名 = 属性值（不推荐）
# 实例属性, 在类外调用, 使用 对象.实例属性名

# 实例属性, 在类下赋值（创建）, 使用__init__方法来给实例属性赋值（写死）
# 实例属性, 在类下赋值（创建）, 使用 self.实例属性名 = 属性值
# 实例属性, 在类下调用, 使用 self.实例属性名
-----------------------------------------------------------------------------------------
类属性：

    在类的外面

            赋值（创建）
                类名.类属性名 = 类属性值　　
                            对象.类属性名 = 类属性值（错误用法，执行报错）　　
            调用
                类名.类属性名　　
                对象.类属性名
            修改
                类名.类属性名 = 类属性值（不推荐）

    在类的里面

            赋值（创建）
                类名.类属性名 = 类属性值
                            self.类属性名 = 类属性值（错误用法，执行报错）
                cls.类属性名 = 类属性值
            调用
                类名.类属性名
                self.类属性名
                cls.类属性名
            修改
                cls.类属性名 = 类属性值


# 类属性, 在类外赋值（创建）, 使用 类名.类属性名 = 类属性值
# 类属性, 在类外调用, 使用 类名.类属性名
# 类属性, 在类外调用, 使用 对象.类属性名
# 类属性, 在类外修改, 使用 类名.类属性名 = 类属性值（不推荐）

# 类属性, 在类下赋值（创建）, 使用 类名.类属性名 = 类属性值
# 类属性, 在类下赋值（创建）, 使用 cls.类属性名 = 类属性值
# 类属性, 在类下调用, 使用 类名.类属性名
# 类属性, 在类下调用, 使用 self.类属性名
# 类属性, 在类下调用, 使用 cls.类属性名
# 类属性, 在类下修改, 使用 cls.类属性名 = 类属性值
-----------------------------------------------------------------------------------------
"""


class PeopleInfo:
    head = 1
    print("1 类属性 —— 对象共有的特征：", head)

    def __init__(self, name, age, height):
        self.fair = "假发"
        print("2 实例属性, 在类下赋值（创建）, 使用__init__方法来给实例属性赋值（写死）：", self.fair)
        self.name = name
        self.age = age
        self.height = height
        print("3 实例属性, 在类下赋值（创建）, 使用 self.实例属性名 = 属性值：", self.name)
        print("4 实例属性, 在类下调用, 使用 self.实例属性名：", self.height)

    def info(self):
        PeopleInfo.hand = 1
        print("5 类属性, 在类下赋值（创建）, 使用 类名.类属性名 = 类属性值：", PeopleInfo.hand)
        print("6 类属性, 在类下调用, 使用 类名.类属性名：", PeopleInfo.head)
        print("7 类属性, 在类下调用, 使用 self.类属性名：", self.head)

    @classmethod
    def angry(cls):
        cls.foot = 1
        print("8 类属性, 在类下赋值（创建）, 使用 cls.类属性名 = 类属性值：", cls.foot)
        print("9 类属性, 在类下调用, 使用 cls.类属性名：", cls.head)
        cls.head = 2
        print("10 类属性, 在类下修改, 使用 cls.类属性名 = 类属性值：", cls.head)

        pass


one_person = PeopleInfo("张三", 20, 170)
one_person.info()
one_person.angry()

# =======================================================================================
one_person.name = "小明"
print("11 实例属性, 在类外赋值（创建）, 使用 对象.实例属性名 = 属性值（不推荐）：", one_person.name)
print("12 实例属性, 在类外调用, 使用 对象.实例属性名：", one_person.age)

# =======================================================================================
PeopleInfo.eye = 3
print("13 类属性, 在类外赋值（创建）, 使用 类名.类属性名 = 类属性值：", PeopleInfo.eye)
print("14 类属性, 在类外调用, 使用 类名.类属性名：", PeopleInfo.head)
print("15 类属性, 在类外调用, 使用 对象.类属性名：", one_person.head)
PeopleInfo.head = 3
print("16 类属性, 在类外修改, 使用 类名.类属性名 = 类属性值（不推荐）：", PeopleInfo.head)
